diff --git a/cargo_train.rb b/cargo_train.rb
index 761c51a..025cd25 100644
--- a/cargo_train.rb
+++ b/cargo_train.rb
@@ -1,16 +1,18 @@
 # frozen_string_literal: true
 
 class CargoTrain < Train
+  validate :type, :presence
+  validate :number, :format, NUMBER_FORMAT
+
   def initialize(number)
-    super
+    super(number)
     @type = 'cargo'
     validate!
-    @@trains << self
   end
 
   def validate!
+    super
     raise 'Ошибка! Неправильный тип для CargoTrain!' if type != 'cargo'
-    raise 'Number has invalid format' if number !~ NUMBER_FORMAT
   end
 
   def valid?
@@ -24,4 +26,4 @@ class CargoTrain < Train
   def create_car
     CargoCar.new
   end
-end
\ No newline at end of file
+end
diff --git a/passenger_train.rb b/passenger_train.rb
index 9462c37..f28f329 100644
--- a/passenger_train.rb
+++ b/passenger_train.rb
@@ -1,16 +1,18 @@
 # frozen_string_literal: true
 
 class PassengerTrain < Train
+  validate :type, :presence
+  validate :number, :format, NUMBER_FORMAT
+
   def initialize(number)
-    super
+    super(number)
     @type = 'passenger'
     validate!
-    @@trains << self
   end
 
   def validate!
+    super
     raise 'Ошибка! Неправильный тип для PassengerTrain' if type != 'passenger'
-    raise 'Train number has invalid format!' if number !~ NUMBER_FORMAT
     raise "Train with number #{number} is already exist!" if @@trains.any? { |train| train.number == number }
   end
 
diff --git a/train.rb b/train.rb
index 95355c5..55f6408 100644
--- a/train.rb
+++ b/train.rb
@@ -16,10 +16,12 @@ class Train
   require_relative 'car'
   require_relative 'instance_counter'
   require_relative 'helper_methods'
+  require_relative 'validation'
 
   include CompanyName
   include InstanceCounter
   include HelperMethods
+  include Validation
 
   attr_accessor :cars, :type, :speed, :route, :current_station, :current_car, :number
 
@@ -36,6 +38,7 @@ class Train
     @current_station = nil
     @current_car = nil
     @number = number
+    @@trains << self
   end
 
   def self.find(index)
